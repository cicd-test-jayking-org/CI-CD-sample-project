name: Push an Edge Image to Amazon ECR

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com
  IMAGE_NAME: ${{ github.repository }}:edge

jobs:
  login-to-amazon-ecr:
    name: Login to Amazon ECR Private
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

    outputs:
      username: ${{ steps.login-ecr.outputs.docker_username_${{ secrets.AWS_ACCESS_KEY_ID }}_dkr_ecr_ap_northeast_2_amazonaws_com }}
      password: ${{ steps.login-ecr.outputs.docker_password_${{ secrets.AWS_ACCESS_KEY_ID }}_dkr_ecr_ap_northeast_2_amazonaws_com }}

  push-edge-image-to-amazon-ecr:
    name: Push an Edge Image to Amazon ECR
    needs: login-to-amazon-ecr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build and push image to Amazon ECR
        uses: gradle/gradle-build-action@v2
        env:
          IMAGE_NAME: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          DOCKER_REGISTRY: ${{ env.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ needs.login-to-amazon-ecr.outputs.username }}
          DOCKER_PASSWORD: ${{ needs.login-to-amazon-ecr.outputs.password }}
        with:
          arguments: bootBuildImage --publishImage



#name: Push an Edge Image to Amazon ECR
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto'
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Login to AWS ECR
#        run: |
#          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
#
#      - name: Build and push Docker image
#        env:
#          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
#          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
#          IMAGE_TAG: edge
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
#      - name: Logout from AWS ECR
#        run: |
#          docker logout $ECR_REGISTRY